{"version":3,"sources":["views/Referral/index.tsx","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx"],"names":["StyledHeroSection","styled","PageSection","BackgroundArea","Flex","ReferralLink","LinkExternal","Referral","t","useTranslation","account","useWeb3React","innerProps","style","margin","width","index","hasCurvedDivider","fontSize","color","href","mt","sharedStyles","theme","clipPath","clipFill","css","isDark","dark","light","colors","background","ConcaveContainer","Box","ConvexContainer","ConvexTop","height","id","clipPathUnits","d","ConvexBottom","ConcaveTop","ConcaveBottom","Wrapper","div","dividerFill","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","ChildrenWrapper","Container","children","svgFill","concaveDivider","containerProps","props"],"mappings":"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","file":"static/js/23.101db264.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Text, LinkExternal } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport PageSection from 'components/PageSection'\r\nimport Page from 'components/Layout/Page'\r\n\r\nconst StyledHeroSection = styled(PageSection)`\r\n  padding-top: 50px;\r\n  padding-bottom: 0px;\r\n`\r\n\r\nconst BackgroundArea = styled(Flex)`\r\n\tbackground-image: url(/images/referral.png);\r\n\tborder-radius: 16px;\r\n\theight: 300px;\r\n\twidth: 100%;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tflex-direction: column;\r\n`\r\n\r\nconst ReferralLink = styled(LinkExternal)`\r\n\tfont-size: 20px;\r\n`\r\n\r\nconst Referral: React.FC = () => {\r\n\tconst { t } = useTranslation()\r\n\tconst { account } = useWeb3React()\r\n\r\n\treturn (\r\n    <>\r\n\t    <Page>\r\n\t    \t<StyledHeroSection\r\n\t        innerProps={{ style: { margin: '0', width: '100%' } }}\r\n\t        index={2}\r\n\t        hasCurvedDivider={false}\r\n\t      >\r\n\t        <BackgroundArea>\r\n\t        \t<Text fontSize=\"22px\">{t('Earn 2% of your FLAMEZ friends earnings! use this link to invite friends')}</Text>\r\n\t        \t<ReferralLink color=\"white\" href={`/?referral=${account}`}>{`referral=${account}`}</ReferralLink>\r\n\t        \t<Text fontSize=\"20px\" mt=\"20px\">{t('Total Friend: 0')}</Text>\r\n\t        \t<Text fontSize=\"20px\">{t('Total Referral Commissions: 0 FLAMEZ')}</Text>\r\n\t        </BackgroundArea>\r\n\t      </StyledHeroSection>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Referral","import React from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport { ClipFill } from '../types'\n\ninterface CurveProps {\n  clipFill?: ClipFill\n}\n\ninterface ContainerProps extends CurveProps {\n  clipPath: string\n}\n\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\n  width: 100%;\n  height: 20px;\n  clip-path: url(${clipPath});\n\n  background: ${() => {\n    if (theme.isDark) {\n      return clipFill?.dark || clipFill?.light || theme.colors.background\n    }\n    return clipFill?.light || theme.colors.background\n  }};\n\n  & svg {\n    display: block;\n  }\n`\n\nconst ConcaveContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\n`\n\nconst ConvexContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\n`\n\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\nimport { DividerFill, ClipFill } from './types'\n\ninterface CurvedDividerProps extends WrapperProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  dividerPosition?: 'top' | 'bottom'\n  concave?: boolean\n  clipFill?: ClipFill\n}\ninterface WrapperProps {\n  index: number\n  dividerFill?: DividerFill\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  background: ${({ theme, dividerFill }) => {\n    if (theme.isDark) {\n      return dividerFill?.dark || dividerFill?.light || 'none'\n    }\n    return dividerFill?.light || dividerFill?.dark || 'none'\n  }};\n  z-index: ${({ index }) => index};\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n`\n\nconst ComponentWrapper = styled.div<WrapperProps>`\n  z-index: ${({ index }) => index + 1};\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\n  index,\n  dividerPosition,\n  dividerComponent,\n  concave,\n  clipFill,\n  dividerFill,\n}) => {\n  const showConvexTop = dividerPosition === 'top' && !concave\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\n  const showConcaveTop = dividerPosition === 'top' && concave\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\n\n  const getConcaveDivider = () => {\n    return (\n      <>\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  const getConvexDivider = () => {\n    return (\n      <>\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  return (\n    <Wrapper index={index} dividerFill={dividerFill}>\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\n      {getConcaveDivider()}\n      {getConvexDivider()}\n    </Wrapper>\n  )\n}\n\nexport default CurvedDivider\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\nimport Container from 'components/Layout/Container'\nimport CurvedDivider from './CurvedDivider'\nimport { ClipFill, DividerFill } from './types'\n\ninterface PageSectionProps extends BackgroundColorProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  hasCurvedDivider?: boolean\n  dividerPosition?: 'top' | 'bottom'\n  concaveDivider?: boolean\n  containerProps?: BoxProps\n  innerProps?: BoxProps\n  clipFill?: ClipFill\n  dividerFill?: DividerFill\n}\n\ninterface BackgroundColorProps extends FlexProps {\n  index: number\n  background?: string\n}\n\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\n  position: relative;\n  flex-direction: column;\n  align-items: center;\n  z-index: ${({ index }) => index - 1};\n  background: ${({ background, theme }) => background || theme.colors.background};\n`\n\nconst ChildrenWrapper = styled(Container)`\n  min-height: auto;\n  padding-top: 16px;\n  padding-bottom: 16px;\n`\n\nconst PageSection: React.FC<PageSectionProps> = ({\n  children,\n  background,\n  svgFill,\n  index = 1,\n  dividerComponent,\n  dividerPosition = 'bottom',\n  hasCurvedDivider = true,\n  concaveDivider = false,\n  clipFill,\n  dividerFill,\n  containerProps,\n  innerProps,\n  ...props\n}) => {\n  const getPadding = () => {\n    // No curved divider\n    if (!hasCurvedDivider) {\n      return '48px 0'\n    }\n    // Bottom curved divider\n    // Less bottom padding, as the divider is present there\n    if (dividerPosition === 'bottom') {\n      return '48px 0 14px'\n    }\n    // Top curved divider\n    // Less top padding, as the divider is present there\n    if (dividerPosition === 'top') {\n      return '14px 0 48px'\n    }\n    return '48px 0'\n  }\n\n  return (\n    <Box {...containerProps}>\n      {hasCurvedDivider && dividerPosition === 'top' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n      <BackgroundColor background={background} index={index} {...props}>\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\n      </BackgroundColor>\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n    </Box>\n  )\n}\n\nexport default PageSection\n"],"sourceRoot":""}